# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qUyHt5YAIBYpfPDoM-QTHgSoVF5CfZPn
"""

#pip install streamlit

import streamlit as st
import pandas as pd
import pickle

# Load the trained model
model = pickle.load(open('logistic_model.pkl', 'rb'))

# Title
st.title("Titanic Survival Prediction")

# Introduction
st.write("""
This app predicts whether a passenger survived the Titanic disaster based on their features.
""")

# Load the trained model
with open('logistic_model.pkl', 'rb') as file:
    model = pickle.load(file)

# Sidebar inputs
st.sidebar.header("Input Features")

def user_input_features():
    PassengerId = st.sidebar.number_input("PassengerId", min_value=1)
    Pclass = st.sidebar.selectbox("Pclass", [1, 2, 3])
    Age = st.sidebar.number_input("Age", min_value=0.0, max_value=100.0, value=30.0)
    SibSp = st.sidebar.number_input("SibSp", min_value=0)
    Parch = st.sidebar.number_input("Parch", min_value=0)
    Fare = st.sidebar.number_input("Fare", min_value=0.0, max_value=500.0, value=30.0)
    Sex = st.sidebar.selectbox("Sex", ['male', 'female'])
    Embarked = st.sidebar.selectbox("Embarked", ['C', 'Q', 'S'])

    data = {
        'PassengerId': PassengerId,
        'Pclass': Pclass,
        'Age': Age,
        'SibSp': SibSp,
        'Parch': Parch,
        'Fare': Fare,
        'Sex_male': 1 if Sex == 'male' else 0,
        'Sex_female': 1 if Sex == 'female' else 0,
        'Embarked_C': 1 if Embarked == 'C' else 0,
        'Embarked_Q': 1 if Embarked == 'Q' else 0,
        'Embarked_S': 1 if Embarked == 'S' else 0
    }
    features = pd.DataFrame(data, index=[0])
    return features

input_df = user_input_features()

# Main panel
st.subheader("User Input Features")
st.write(input_df)

# Make prediction
prediction = model.predict(input_df)
prediction_proba = model.predict_proba(input_df)

st.subheader("Prediction")
survived = "Yes" if prediction[0] == 1 else "No"
st.write(survived)

st.subheader("Prediction Probability")
st.write(prediction_proba)

